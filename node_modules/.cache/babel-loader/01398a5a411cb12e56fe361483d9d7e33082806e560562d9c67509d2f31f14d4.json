{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bnikh\\\\Desktop\\\\Ashish NBAD Project\\\\PersonalBudget-Frontend\\\\src\\\\DashboardPage\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const calculateDifferenceForCategoryAndMonth = (categoryName, month, dataSource) => {\n  const categoryIndex = dataSource.labels.indexOf(categoryName);\n  if (categoryIndex !== -1) {\n    const budget = dataSource.datasets[0].data[categoryIndex];\n    const expenses = dataSource.datasets[0].expense[categoryIndex];\n    const matchingMonthIndex = dataSource.datasets[0].month.indexOf(month);\n    if (matchingMonthIndex !== -1 && categoryIndex !== -1 && matchingMonthIndex === categoryIndex) {\n      const difference = budget - expenses;\n      return difference;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n};\nfunction DashboardPage() {\n  _s();\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('jwt');\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  function decodingJWT(token) {\n    try {\n      const base64payload = token.split('.')[1].replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      return {};\n    }\n  }\n  useEffect(() => {\n    const existingToken = localStorage.getItem('jwt');\n    if (existingToken) {\n      const decodedToken = decodingJWT(existingToken);\n      const issuedAt = decodedToken.iat;\n      const expiresIn = decodedToken.exp - issuedAt;\n      const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n        if (!userResponse || currentTimeInSeconds - issuedAt > expiresIn) {\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n  const options = months.map(month => ({\n    label: month,\n    value: month\n  }));\n  const [selectedMonth1, setSelectedMonth1] = React.useState('');\n  const [selectedMonth2, setSelectedMonth2] = React.useState('');\n  const handleChange1 = event => {\n    setSelectedMonth1(event.target.value);\n  };\n  const handleChange2 = event => {\n    setSelectedMonth2(event.target.value);\n  };\n  const [dataSource, setDataSource] = useState({\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      expense: [],\n      month: []\n    }],\n    labels: []\n  });\n  const createChart = () => {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredExpenses = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    const filteredBudget = dataSource.datasets[0].data.filter((budget, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    const filteredLabels = dataSource.labels.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            label: 'Total Budget',\n            data: filteredBudget,\n            backgroundColor: 'red',\n            borderWidth: 1\n          }, {\n            label: 'Expense',\n            data: filteredExpenses,\n            backgroundColor: 'orange',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n    ;\n  };\n  const createPieChart = () => {\n    const ctx = document.getElementById('chart2').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredData = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === selectedMonth2);\n    const filteredLabels = dataSource.labels.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth2);\n    const filteredColors = dataSource.datasets[0].backgroundColor.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth2);\n    if (filteredData.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            data: filteredData,\n            backgroundColor: filteredColors,\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          legend: {\n            position: 'right'\n          }\n        }\n      });\n    }\n  };\n  const date = new Date();\n  const monthName = months[date.getMonth()];\n  const createStackedLineChart = () => {\n    const ctx = document.getElementById('chart3').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredExpenses = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === monthName);\n    const filteredBudget = dataSource.datasets[0].data.filter((budget, index) => dataSource.datasets[0].month[index] === monthName);\n    if (filteredBudget.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      const amountDifference = filteredBudget.map((budget, index) => {\n        const expenses = filteredExpenses[index];\n        return budget - expenses;\n      });\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: dataSource.labels,\n          datasets: [{\n            label: 'Budget',\n            data: filteredBudget,\n            borderColor: 'rgba(0, 255, 0, 0.8)',\n            backgroundColor: 'rgba(0, 255, 0, 0.2)',\n            borderWidth: 2,\n            fill: 'origin'\n          }, {\n            label: 'Expenses',\n            data: filteredExpenses,\n            borderColor: 'rgba(255, 0, 0, 0.8)',\n            backgroundColor: 'rgba(255, 0, 0, 0.2)',\n            borderWidth: 2,\n            fill: '-1'\n          }, {\n            label: 'Amount Difference',\n            data: amountDifference,\n            borderColor: 'rgba(0, 0, 255, 0.8)',\n            backgroundColor: 'rgba(0, 0, 255, 0.2)',\n            borderWidth: 2,\n            fill: '-1'\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Months'\n              }\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Amount'\n              }\n            }\n          }\n        }\n      });\n    }\n    ;\n  };\n  const createLineChart = () => {\n    const ctx = document.getElementById('chart4').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const totalBudgetByMonth = new Array(12).fill(0);\n    const totalExpensesByMonth = new Array(12).fill(0);\n    dataSource.datasets[0].data.forEach((budget, index) => {\n      const monthIndex = months.indexOf(dataSource.datasets[0].month[index]);\n      totalBudgetByMonth[monthIndex] += budget;\n      totalExpensesByMonth[monthIndex] += dataSource.datasets[0].expense[index];\n    });\n    const budgetLineData = {\n      label: 'Budget',\n      data: totalBudgetByMonth,\n      borderColor: 'rgba(160, 82, 45, 0.8)',\n      backgroundColor: 'rgba(160, 82, 45, 0.2)',\n      borderWidth: 2,\n      fill: false\n    };\n    const expenseLineData = {\n      label: 'Expenses',\n      data: totalExpensesByMonth,\n      borderColor: 'orange',\n      backgroundColor: 'orange',\n      borderWidth: 2,\n      fill: false\n    };\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: months,\n        datasets: [budgetLineData, expenseLineData]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Months'\n            }\n          },\n          y: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Amount'\n            }\n          }\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    createPieChart();\n  }, [selectedMonth2, dataSource]);\n  useEffect(() => {\n    createChart();\n  }, [selectedMonth1, dataSource]);\n  const [totalBudget, setTotalBudget] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const createDataTable = () => {\n    const tableContainer = document.getElementById('table-container');\n    const table = document.createElement('table');\n    table.classList.add('data-table');\n    const caption = document.createElement('caption');\n    caption.textContent = 'Budget and Expenses Data';\n    table.appendChild(caption);\n    const headerRow = document.createElement('tr');\n    const headers = ['Category', 'Month', 'Budget', 'Expenses', 'Amount Difference'];\n    headers.forEach(headerText => {\n      const headerCell = document.createElement('th');\n      headerCell.textContent = headerText;\n      headerRow.appendChild(headerCell);\n    });\n    table.appendChild(headerRow);\n    dataSource.labels.forEach((category, index) => {\n      const month = dataSource.datasets[0].month[index];\n      const budget = dataSource.datasets[0].data[index];\n      const expenses = dataSource.datasets[0].expense[index];\n      const amountDifference = budget - expenses;\n      const row = document.createElement('tr');\n      const cells = [category, month, budget, expenses, amountDifference];\n      cells.forEach(cellData => {\n        const cell = document.createElement('td');\n        cell.textContent = cellData;\n        row.appendChild(cell);\n      });\n      table.appendChild(row);\n    });\n    tableContainer.innerHTML = '';\n    tableContainer.appendChild(table);\n  };\n  const getBudget = () => {\n    axios.get(`http://localhost:3000/api/budget/${username}  `, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      let budgetTotal = 0;\n      let expenseTotal = 0;\n      for (var i = 0; i < res.data.length; i++) {\n        budgetTotal += res.data[i].budget;\n        expenseTotal += res.data[i].expense;\n        dataSource.datasets[0].data[i] = res.data[i].budget;\n        dataSource.labels[i] = res.data[i].title;\n        dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n        dataSource.datasets[0].expense[i] = res.data[i].expense;\n        dataSource.datasets[0].month[i] = res.data[i].month;\n      }\n      setTotalBudget(budgetTotal);\n      setTotalExpense(expenseTotal);\n      // createChart();\n      console.log('dataSource:::', dataSource);\n      createStackedLineChart();\n      createLineChart();\n      createDataTable();\n    }).catch(function (error) {\n      console.error('Error fetching budget data:', error);\n    });\n  };\n  useEffect(() => {\n    getBudget();\n  }, []);\n  const getFormattedDate = () => {\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    const today = new Date();\n    return today.toLocaleDateString('en-US', options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dash-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dashboard-heading\",\n          children: \"Welcome to Your Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"logout-link\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"summary-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label\",\n            children: \"Total Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: [\"$\", totalBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label\",\n            children: \"Total Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: [\"$\", totalExpense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label\",\n            children: \"Remaining Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: [\"$\", totalBudget - totalExpense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label\",\n            children: \"Total Expenses Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: [(totalExpense / totalBudget * 100).toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"charts-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"chart-heading\",\n          children: \"Budget and Expenses by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Select a month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMonth1,\n            onChange: handleChange1,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"myChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"chart-heading\",\n          children: \"Pie Chart for Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Select a month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMonth2,\n            onChange: handleChange2,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"chart2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"chart-heading\",\n          children: \"Ranges for Budget and Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-chart\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"chart3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"chart-heading\",\n          children: \"Total Budget vs Expenses Over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-chart\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"chart4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"data-table-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 434,\n    columnNumber: 8\n  }, this);\n}\n_s(DashboardPage, \"znKAPDWB7ue+iyiONHgMfenPcsk=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Chart","jsxDEV","_jsxDEV","calculateDifferenceForCategoryAndMonth","categoryName","month","dataSource","categoryIndex","labels","indexOf","budget","datasets","data","expenses","expense","matchingMonthIndex","difference","DashboardPage","_s","username","localStorage","getItem","token","months","decodingJWT","base64payload","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","error","existingToken","decodedToken","issuedAt","iat","expiresIn","exp","currentTimeInSeconds","Math","floor","Date","now","warningTime","warningTimeout","setTimeout","userResponse","window","confirm","removeItem","location","reload","clearTimeout","options","label","value","selectedMonth1","setSelectedMonth1","selectedMonth2","setSelectedMonth2","handleChange1","event","target","handleChange2","setDataSource","backgroundColor","createChart","ctx","document","getElementById","getContext","existingChart","getChart","destroy","filteredExpenses","filter","index","filteredBudget","filteredLabels","_","length","clearRect","canvas","width","height","font","textAlign","fillText","type","borderWidth","scales","y","display","createPieChart","filteredData","filteredColors","responsive","maintainAspectRatio","legend","position","date","monthName","getMonth","createStackedLineChart","amountDifference","borderColor","fill","x","title","text","createLineChart","totalBudgetByMonth","Array","totalExpensesByMonth","forEach","monthIndex","budgetLineData","expenseLineData","totalBudget","setTotalBudget","totalExpense","setTotalExpense","createDataTable","tableContainer","table","createElement","classList","add","caption","textContent","appendChild","headerRow","headers","headerText","headerCell","category","row","cells","cellData","cell","innerHTML","getBudget","get","Authorization","then","res","console","log","budgetTotal","expenseTotal","i","color","catch","getFormattedDate","weekday","year","day","today","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","toFixed","onChange","disabled","id","_c","$RefreshReg$"],"sources":["C:/Users/bnikh/Desktop/Ashish NBAD Project/PersonalBudget-Frontend/src/DashboardPage/DashboardPage.js"],"sourcesContent":["  import React, { useState, useEffect } from 'react';\n  import { Link } from 'react-router-dom';\n  import axios from 'axios';\n  import Chart from 'chart.js/auto';\n\n   export const calculateDifferenceForCategoryAndMonth = (categoryName, month, dataSource) => {\n    const categoryIndex = dataSource.labels.indexOf(categoryName);\n  \n    if (categoryIndex !== -1) {\n      const budget = dataSource.datasets[0].data[categoryIndex];\n      const expenses = dataSource.datasets[0].expense[categoryIndex];\n      const matchingMonthIndex = dataSource.datasets[0].month.indexOf(month);\n  \n      if (matchingMonthIndex !== -1 && categoryIndex !== -1 && matchingMonthIndex === categoryIndex) {\n        const difference = budget - expenses;\n        return difference;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  \n  function DashboardPage() {\n    const username = localStorage.getItem('username');\n    const token = localStorage.getItem('jwt');\n    const months = [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n    ];\n\n    function decodingJWT(token) {\n      try {\n          const base64payload = (token.split('.')[1]).replace(/-/g, '+').replace(/_/g, '/');\n          const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function(c) {\n               return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n  \n          return JSON.parse(jsonPayload);\n          } catch (error) {\n              return {};\n          }\n      }\n      useEffect(() => {\n        const existingToken = localStorage.getItem('jwt');\n        if (existingToken) {\n          const decodedToken = decodingJWT(existingToken);\n          const issuedAt = decodedToken.iat; \n          const expiresIn = decodedToken.exp - issuedAt;\n          const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n\n        if (!userResponse || currentTimeInSeconds-issuedAt>expiresIn) {\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n\n    const options = months.map((month) => ({\n      label: month,\n      value: month,\n    }));\n\n    const [selectedMonth1, setSelectedMonth1] = React.useState('');\n    const [selectedMonth2, setSelectedMonth2] = React.useState('');\n\n    const handleChange1 = (event) => {\n      setSelectedMonth1(event.target.value);\n    };\n    const handleChange2 = (event) => {\n      setSelectedMonth2(event.target.value);\n    };\n    const [dataSource, setDataSource] = useState({\n      datasets: [\n        {\n          data: [],\n          backgroundColor: [],\n          expense: [],\n          month: [],\n        },\n      ],\n      labels: [],\n    });\n\n    const createChart = () => {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const existingChart = Chart.getChart(ctx);\n      if (existingChart) {\n        existingChart.destroy();\n      }\n    \n      const filteredExpenses = dataSource.datasets[0].expense.filter(\n        (expense, index) => dataSource.datasets[0].month[index] === selectedMonth1\n      );\n      const filteredBudget = dataSource.datasets[0].data.filter(\n        (budget, index) => dataSource.datasets[0].month[index] === selectedMonth1\n      );\n      const filteredLabels = dataSource.labels.filter(\n        (_, index) => dataSource.datasets[0].month[index] === selectedMonth1\n      );\n    \n      if (filteredLabels.length === 0) {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n      } else {\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredLabels,\n          datasets: [\n            {\n              label: 'Total Budget',\n              data: filteredBudget,\n              backgroundColor: 'red',\n              borderWidth: 1,\n            },\n            {\n              label: 'Expense',\n              data: filteredExpenses,\n              backgroundColor: 'orange',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          scales: {\n            y: {\n              display: false,\n            },\n          },\n        },\n      });\n    };\n  };\n\n    const createPieChart = () => {\n      const ctx = document.getElementById('chart2').getContext('2d');\n    \n      const existingChart = Chart.getChart(ctx);\n      if (existingChart) {\n        existingChart.destroy();\n      }\n    \n      const filteredData = dataSource.datasets[0].expense.filter(\n        (expense, index) => dataSource.datasets[0].month[index] === selectedMonth2\n      );\n      const filteredLabels = dataSource.labels.filter(\n        (_, index) => dataSource.datasets[0].month[index] === selectedMonth2\n      );\n      const filteredColors = dataSource.datasets[0].backgroundColor.filter(\n        (_, index) => dataSource.datasets[0].month[index] === selectedMonth2\n      );\n    \n      if (filteredData.length === 0) {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n      } else {\n        new Chart(ctx, {\n          type: 'pie',\n          data: {\n            labels: filteredLabels,\n            datasets: [\n              {\n                data: filteredData,\n                backgroundColor: filteredColors, \n                borderWidth: 1,\n              },\n            ],\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            legend: {\n              position: 'right',\n            },\n          },\n        });\n      }\n    };\n    const date = new Date();\n    const monthName = months[date.getMonth()];\n    const createStackedLineChart = () => {\n      const ctx = document.getElementById('chart3').getContext('2d');\n      const existingChart = Chart.getChart(ctx);\n      if (existingChart) {\n        existingChart.destroy();\n      }\n      const filteredExpenses = dataSource.datasets[0].expense.filter(\n        (expense, index) => dataSource.datasets[0].month[index] === monthName\n      );\n      const filteredBudget = dataSource.datasets[0].data.filter(\n        (budget, index) => dataSource.datasets[0].month[index] === monthName\n      );\n      \n      if (filteredBudget.length === 0) {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n      } else {\n      const amountDifference = filteredBudget.map((budget, index) => {\n        const expenses = filteredExpenses[index];\n        return budget - expenses;\n      });\n    \n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: dataSource.labels,\n          datasets: [\n            {\n              label: 'Budget',\n              data: filteredBudget,\n              borderColor: 'rgba(0, 255, 0, 0.8)',\n              backgroundColor: 'rgba(0, 255, 0, 0.2)',\n              borderWidth: 2,\n              fill: 'origin',\n            },\n            {\n              label: 'Expenses',\n              data: filteredExpenses,\n              borderColor: 'rgba(255, 0, 0, 0.8)',\n              backgroundColor: 'rgba(255, 0, 0, 0.2)',\n              borderWidth: 2,\n              fill: '-1',\n            },\n            {\n              label: 'Amount Difference',\n              data: amountDifference,\n              borderColor: 'rgba(0, 0, 255, 0.8)',\n              backgroundColor: 'rgba(0, 0, 255, 0.2)',\n              borderWidth: 2,\n              fill: '-1',\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Months',\n              },\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Amount',\n              },\n            },\n          },\n        },\n      });\n    };\n  };\n  const createLineChart = () => {\n    const ctx = document.getElementById('chart4').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n  \n    const totalBudgetByMonth = new Array(12).fill(0);\n    const totalExpensesByMonth = new Array(12).fill(0);\n  \n    dataSource.datasets[0].data.forEach((budget, index) => {\n      const monthIndex = months.indexOf(dataSource.datasets[0].month[index]);\n      totalBudgetByMonth[monthIndex] += budget;\n      totalExpensesByMonth[monthIndex] += dataSource.datasets[0].expense[index];\n    });\n  \n    const budgetLineData = {\n      label: 'Budget',\n      data: totalBudgetByMonth,\n      borderColor: 'rgba(160, 82, 45, 0.8)', \n      backgroundColor: 'rgba(160, 82, 45, 0.2)',\n      borderWidth: 2,\n      fill: false,\n     \n    };\n    \n    const expenseLineData = {\n      label: 'Expenses',\n      data: totalExpensesByMonth,\n      borderColor: 'orange', \n      backgroundColor: 'orange',\n      borderWidth: 2,\n      fill: false,\n    };\n    \n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: months,\n        datasets: [budgetLineData, expenseLineData],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Months',\n            },\n          },\n          y: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Amount',\n            },\n          },\n        },\n      },\n    });\n  };\n  \n  \n  \n    useEffect(() => {\n      createPieChart(); \n    }, [selectedMonth2, dataSource]);\n\n    useEffect(() => {\n      createChart(); \n    }, [selectedMonth1, dataSource]);\n    const [totalBudget, setTotalBudget] = useState(0);\n    const [totalExpense, setTotalExpense] = useState(0);\n    const createDataTable = () => {\n      const tableContainer = document.getElementById('table-container');\n    \n      const table = document.createElement('table');\n      table.classList.add('data-table');\n    \n      const caption = document.createElement('caption');\n      caption.textContent = 'Budget and Expenses Data';\n      table.appendChild(caption);\n    \n      const headerRow = document.createElement('tr');\n    \n      const headers = ['Category', 'Month', 'Budget', 'Expenses', 'Amount Difference'];\n      headers.forEach(headerText => {\n        const headerCell = document.createElement('th');\n        headerCell.textContent = headerText;\n        headerRow.appendChild(headerCell);\n      });\n    \n      table.appendChild(headerRow);\n    \n      dataSource.labels.forEach((category, index) => {\n        const month = dataSource.datasets[0].month[index];\n        const budget = dataSource.datasets[0].data[index];\n        const expenses = dataSource.datasets[0].expense[index];\n        const amountDifference = budget - expenses;\n    \n        const row = document.createElement('tr');\n    \n        const cells = [category, month, budget, expenses, amountDifference];\n        cells.forEach(cellData => {\n          const cell = document.createElement('td');\n          cell.textContent = cellData;\n          row.appendChild(cell);\n        });\n    \n        table.appendChild(row);\n      });\n    \n      tableContainer.innerHTML = '';\n    \n      tableContainer.appendChild(table);\n    };\n    \n    const getBudget = () => {\n      axios\n        .get(`http://localhost:3000/api/budget/${username}  `, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then(function (res) {\n          console.log(res.data);\n           let budgetTotal = 0;\n        let expenseTotal = 0;\n          for (var i = 0; i < res.data.length; i++) {\n            budgetTotal += res.data[i].budget;\n            expenseTotal += res.data[i].expense;\n            dataSource.datasets[0].data[i] = res.data[i].budget;\n            dataSource.labels[i] = res.data[i].title;\n            dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n            dataSource.datasets[0].expense[i] = res.data[i].expense;\n            dataSource.datasets[0].month[i] = res.data[i].month;\n          }\n          setTotalBudget(budgetTotal);\n        setTotalExpense(expenseTotal);\n          // createChart();\n          console.log('dataSource:::',dataSource);\n          createStackedLineChart();\n          createLineChart();\n          createDataTable();\n        })\n        .catch(function (error) {\n          console.error('Error fetching budget data:', error);\n        });\n    };\n\n    useEffect(() => {\n      getBudget();\n      \n    }, []);\n  \n  const getFormattedDate = () => {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const today = new Date();\n    return today.toLocaleDateString('en-US', options);\n  };\n    return (\n       <div className=\"dashboard\">\n      <header className=\"dash-header\">\n        <div className=\"header-container\">\n          <h1 className=\"dashboard-heading\">Welcome to Your Dashboard</h1>\n          <Link to=\"/login\" className=\"logout-link\">\n            Logout\n          </Link>\n        </div>\n      </header>\n\n      <section className=\"summary-section\">\n        <div className=\"summary-container\">\n          <div className=\"summary-item\">\n            <p className=\"label\">Total Budget</p>\n            <p className=\"value\">${totalBudget}</p>\n          </div>\n          <div className=\"summary-item\">\n            <p className=\"label\">Total Expenses</p>\n            <p className=\"value\">${totalExpense}</p>\n          </div>\n          <div className=\"summary-item\">\n            <p className=\"label\">Remaining Balance</p>\n            <p className=\"value\">${totalBudget - totalExpense}</p>\n          </div>\n          <div className=\"summary-item\">\n            <p className=\"label\">Total Expenses Percentage</p>\n            <p className=\"value\">{((totalExpense / totalBudget) * 100).toFixed(2)}%</p>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"charts-section\">\n        <article className=\"chart-container\">\n          <h2 className=\"chart-heading\">Budget and Expenses by Category</h2>\n          <label>\n            Select a month:\n            <select value={selectedMonth1} onChange={handleChange1}>\n              <option value=\"\" disabled>\n                Select a month\n              </option>\n              {/* Options for month selection */}\n            </select>\n          </label>\n          <canvas id=\"myChart\"></canvas>\n        </article>\n\n        <article className=\"chart-container\">\n          <h2 className=\"chart-heading\">Pie Chart for Expenses</h2>\n          <label>\n            Select a month:\n            <select value={selectedMonth2} onChange={handleChange2}>\n              <option value=\"\" disabled>\n                Select a month\n              </option>\n              {/* Options for month selection */}\n            </select>\n          </label>\n          <canvas id=\"chart2\"></canvas>\n        </article>\n\n        <article className=\"chart-container\">\n          <h2 className=\"chart-heading\">Ranges for Budget and Expenses</h2>\n          <div className=\"range-chart\">\n            <canvas id=\"chart3\"></canvas>\n          </div>\n        </article>\n\n        <article className=\"chart-container\">\n          <h2 className=\"chart-heading\">Total Budget vs Expenses Over Time</h2>\n          <div className=\"line-chart\">\n            <canvas id=\"chart4\"></canvas>\n          </div>\n        </article>\n      </section>\n\n      <section className=\"data-table-section\">\n        <div className=\"data-table-container\">\n          {/* Display data table */}\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}