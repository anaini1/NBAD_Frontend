{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bnikh\\\\Desktop\\\\Ashish NBAD Project\\\\PersonalBudget-Frontend\\\\src\\\\DashboardPage\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('jwt');\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  function decodingJWT(token) {\n    try {\n      const base64payload = token.split('.')[1].replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      return {};\n    }\n  }\n  useEffect(() => {\n    const existingToken = localStorage.getItem('jwt');\n    if (existingToken) {\n      const decodedToken = decodingJWT(existingToken);\n      const issuedAt = decodedToken.iat;\n      const expiresIn = decodedToken.exp - issuedAt;\n      const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n        if (!userResponse || currentTimeInSeconds - issuedAt > expiresIn) {\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedMonth1, setSelectedMonth1] = useState('');\n  const [dataSource, setDataSource] = useState({\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      expense: [],\n      month: []\n    }],\n    labels: []\n  });\n  const [totalBudget, setTotalBudget] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const createDataTable = () => {\n    // Existing code for creating data table\n  };\n  const drawDonutChart = () => {\n    const ctx = document.getElementById('chart1');\n    let myChart = Chart.getChart(ctx);\n    if (myChart) {\n      myChart.destroy();\n    }\n    myChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Budget', 'Expenses'],\n        datasets: [{\n          label: 'Budget vs Expenses',\n          data: [totalBudget, totalExpense],\n          backgroundColor: ['rgba(54, 162, 235, 0.5)', 'rgba(255, 99, 132, 0.5)'],\n          borderWidth: 1\n        }]\n      }\n    });\n  };\n  const getBudget = () => {\n    axios.get(`http://localhost:3000/api/budget/${username}  `, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      let budgetTotal = 0;\n      let expenseTotal = 0;\n      for (var i = 0; i < res.data.length; i++) {\n        budgetTotal += res.data[i].budget;\n        expenseTotal += res.data[i].expense;\n        dataSource.datasets[0].data[i] = res.data[i].budget;\n        dataSource.labels[i] = res.data[i].title;\n        dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n        dataSource.datasets[0].expense[i] = res.data[i].expense;\n        dataSource.datasets[0].month[i] = res.data[i].month;\n      }\n      setTotalBudget(budgetTotal);\n      setTotalExpense(expenseTotal);\n      // createChart();\n      console.log('dataSource:::', dataSource);\n      createStackedLineChart();\n      createDataTable();\n    }).catch(function (error) {\n      console.error('Error fetching budget data:', error);\n    });\n  };\n  useEffect(() => {\n    getBudget(selectedMonth);\n  });\n  const getFormattedDate = () => {\n    // Existing code for formatting date\n  };\n  const handleMonthChange = event => {\n    setSelectedMonth(event.target.value);\n  };\n  const handleChange1 = event => {\n    setSelectedMonth1(event.target.value);\n  };\n  useEffect(() => {\n    setSelectedMonth((new Date().getMonth() + 1).toString());\n    setSelectedMonth1(months[new Date().getMonth()]);\n  }, []);\n  useEffect(() => {\n    drawDonutChart();\n  }, [dataSource]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      padding: '30px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-corner-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dashboard-head\",\n          children: [\"WELCOME TO \", username, \"'s DASHBOARD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"logout-link\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"charts\",\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Donut Chart for Budget and Expenses in \", selectedMonth1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select a month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedMonth1,\n              onChange: handleChange1,\n              \"aria-label\": \"Select a month\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: '',\n                disabled: true,\n                hidden: true,\n                children: \"Select a month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: month,\n                children: month\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"chart1\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"table-container\",\n        className: \"data-table-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"j0YPZf4FX/SUh+lnUFZjG1AfNQk=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Chart","jsxDEV","_jsxDEV","DashboardPage","_s","username","localStorage","getItem","token","months","decodingJWT","base64payload","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","error","existingToken","decodedToken","issuedAt","iat","expiresIn","exp","currentTimeInSeconds","Math","floor","Date","now","warningTime","warningTimeout","setTimeout","userResponse","window","confirm","removeItem","location","reload","clearTimeout","selectedMonth","setSelectedMonth","selectedMonth1","setSelectedMonth1","dataSource","setDataSource","datasets","data","backgroundColor","expense","month","labels","totalBudget","setTotalBudget","totalExpense","setTotalExpense","createDataTable","drawDonutChart","ctx","document","getElementById","myChart","getChart","destroy","type","label","borderWidth","getBudget","get","headers","Authorization","then","res","console","log","budgetTotal","expenseTotal","i","length","budget","title","color","createStackedLineChart","catch","getFormattedDate","handleMonthChange","event","target","value","handleChange1","getMonth","style","position","padding","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onChange","disabled","hidden","index","id","_c","$RefreshReg$"],"sources":["C:/Users/bnikh/Desktop/Ashish NBAD Project/PersonalBudget-Frontend/src/DashboardPage/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\n\nfunction DashboardPage() {\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('jwt');\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n\n  function decodingJWT(token) {\n    try {\n      const base64payload = (token.split('.')[1]).replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      return {};\n    }\n  }\n\n  useEffect(() => {\n    const existingToken = localStorage.getItem('jwt');\n    if (existingToken) {\n      const decodedToken = decodingJWT(existingToken);\n      const issuedAt = decodedToken.iat; \n      const expiresIn = decodedToken.exp - issuedAt;\n      const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n\n        if (!userResponse || currentTimeInSeconds-issuedAt>expiresIn) {\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedMonth1, setSelectedMonth1] = useState('');\n  const [dataSource, setDataSource] = useState({\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [],\n        expense: [],\n        month: [],\n      },\n    ],\n    labels: [],\n  });\n\n  const [totalBudget, setTotalBudget] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n\n  const createDataTable = () => {\n    // Existing code for creating data table\n  };\n  const drawDonutChart = () => {\n    const ctx = document.getElementById('chart1');\n    let myChart = Chart.getChart(ctx);\n    if (myChart) {\n      myChart.destroy();\n    }\n  myChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Budget', 'Expenses'],\n        datasets: [{\n          label: 'Budget vs Expenses',\n          data: [totalBudget, totalExpense],\n          backgroundColor: [\n            'rgba(54, 162, 235, 0.5)',\n            'rgba(255, 99, 132, 0.5)',\n          ],\n          borderWidth: 1,\n        }],\n      },\n    });\n  };\n\n  const getBudget = () => {\n    axios\n      .get(`http://localhost:3000/api/budget/${username}  `, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then(function (res) {\n        console.log(res.data);\n         let budgetTotal = 0;\n      let expenseTotal = 0;\n        for (var i = 0; i < res.data.length; i++) {\n          budgetTotal += res.data[i].budget;\n          expenseTotal += res.data[i].expense;\n          dataSource.datasets[0].data[i] = res.data[i].budget;\n          dataSource.labels[i] = res.data[i].title;\n          dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n          dataSource.datasets[0].expense[i] = res.data[i].expense;\n          dataSource.datasets[0].month[i] = res.data[i].month;\n        }\n        setTotalBudget(budgetTotal);\n      setTotalExpense(expenseTotal);\n        // createChart();\n        console.log('dataSource:::',dataSource);\n        createStackedLineChart();\n        \n        createDataTable();\n      })\n      .catch(function (error) {\n        console.error('Error fetching budget data:', error);\n      });\n  };\n\n  useEffect(() => {\n    getBudget(selectedMonth);\n  });\n\n  const getFormattedDate = () => {\n    // Existing code for formatting date\n  };\n\n  const handleMonthChange = (event) => {\n    setSelectedMonth(event.target.value);\n  };\n\n  const handleChange1 = (event) => {\n    setSelectedMonth1(event.target.value);\n  };\n\n  useEffect(() => {\n    setSelectedMonth((new Date().getMonth() + 1).toString());\n    setSelectedMonth1(months[new Date().getMonth()]);\n  }, []);\n\n  useEffect(() => {\n    drawDonutChart();\n  }, [dataSource]);\n\n\n  return (\n    <div style={{ position: 'relative', padding: '30px' }}>\n      <div className=\"dashboard-corner-section\">\n        <div className=\"heading-container\">\n          <h1 className=\"dashboard-head\">WELCOME TO {username}'s DASHBOARD</h1>\n          <Link to=\"/login\" className=\"logout-link\">Logout</Link>\n        </div>\n        {/* <div className='filter-dropdown'>\n          <label htmlFor=\"month-dropdown\">Select a month:</label><br/>\n          <div className=\"custom-dropdown\">\n            <select id=\"month-dropdown\" value={selectedMonth} onChange={handleMonthChange}>\n              <option value=\"\" disabled>Select a month</option>\n              {months.map((month, index) => (\n                <option key={index} value={(index + 1).toString()}>{month}</option>\n              ))}\n            </select>\n            <div className=\"dropdown-arrow\">&#9660;</div>\n          </div>\n          \n        </div> */}\n        \n        <section className=\"charts\">\n          <article className=\"chart chart1\">\n            <h3>Donut Chart for Budget and Expenses in {selectedMonth1}</h3>\n            <label>\n              Select a month:\n              <select value={selectedMonth1} onChange={handleChange1} aria-label=\"Select a month\">\n                <option value={''} disabled hidden>\n                  Select a month\n                </option>\n                {months.map((month, index) => (\n                  <option key={index} value={month}>{month}</option>\n                ))}\n              </select>\n            </label>\n            <div>\n              <canvas id=\"chart1\"> </canvas>\n            </div>\n          </article>\n        </section>\n        <div id=\"table-container\" className=\"data-table-container\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default DashboardPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;EACzC,MAAME,MAAM,GAAG,CACb,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACzH;EAED,SAASC,WAAWA,CAACF,KAAK,EAAE;IAC1B,IAAI;MACF,MAAMG,aAAa,GAAIH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAEC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MACjF,MAAMC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACL,aAAa,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC,CAACK,GAAG,CAAC,UAASC,CAAC,EAAE;QACnF,OAAO,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC9D,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;MAEZ,OAAOC,IAAI,CAACC,KAAK,CAACV,WAAW,CAAC;IAChC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACd,OAAO,CAAC,CAAC;IACX;EACF;EAEA5B,SAAS,CAAC,MAAM;IACd,MAAM6B,aAAa,GAAGpB,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACjD,IAAImB,aAAa,EAAE;MACjB,MAAMC,YAAY,GAAGjB,WAAW,CAACgB,aAAa,CAAC;MAC/C,MAAME,QAAQ,GAAGD,YAAY,CAACE,GAAG;MACjC,MAAMC,SAAS,GAAGH,YAAY,CAACI,GAAG,GAAGH,QAAQ;MAC7C,MAAMI,oBAAoB,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;MAC1D,MAAMC,WAAW,GAAGP,SAAS,GAAG,EAAE;MAClC,MAAMQ,cAAc,GAAGC,UAAU,CAAC,MAAM;QACtC,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAAC,kEAAkE,CAAC;QAEvG,IAAI,CAACF,YAAY,IAAIR,oBAAoB,GAACJ,QAAQ,GAACE,SAAS,EAAE;UAC5DxB,YAAY,CAACqC,UAAU,CAAC,KAAK,CAAC;UAC9BrC,YAAY,CAACqC,UAAU,CAAC,UAAU,CAAC;UACnCF,MAAM,CAACG,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC1B;MACF,CAAC,EAAER,WAAW,GAAG,IAAI,CAAC;MAEtB,OAAO,MAAMS,YAAY,CAACR,cAAc,CAAC;IAC3C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqD,cAAc,EAAEC,iBAAiB,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACuD,UAAU,EAAEC,aAAa,CAAC,GAAGxD,QAAQ,CAAC;IAC3CyD,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,EAAE;MACnBC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;IACT,CAAC,CACF;IACDC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhE,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiE,YAAY,EAAEC,eAAe,CAAC,GAAGlE,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMmE,eAAe,GAAGA,CAAA,KAAM;IAC5B;EAAA,CACD;EACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAC7C,IAAIC,OAAO,GAAGpE,KAAK,CAACqE,QAAQ,CAACJ,GAAG,CAAC;IACjC,IAAIG,OAAO,EAAE;MACXA,OAAO,CAACE,OAAO,CAAC,CAAC;IACnB;IACFF,OAAO,GAAG,IAAIpE,KAAK,CAACiE,GAAG,EAAE;MACrBM,IAAI,EAAE,UAAU;MAChBjB,IAAI,EAAE;QACJI,MAAM,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;QAC9BL,QAAQ,EAAE,CAAC;UACTmB,KAAK,EAAE,oBAAoB;UAC3BlB,IAAI,EAAE,CAACK,WAAW,EAAEE,YAAY,CAAC;UACjCN,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,CAC1B;UACDkB,WAAW,EAAE;QACf,CAAC;MACH;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB3E,KAAK,CACF4E,GAAG,CAAE,oCAAmCtE,QAAS,IAAG,EAAE;MACrDuE,OAAO,EAAE;QACPC,aAAa,EAAG,UAASrE,KAAM;MACjC;IACF,CAAC,CAAC,CACDsE,IAAI,CAAC,UAAUC,GAAG,EAAE;MACnBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACzB,IAAI,CAAC;MACpB,IAAI4B,WAAW,GAAG,CAAC;MACtB,IAAIC,YAAY,GAAG,CAAC;MAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACzB,IAAI,CAAC+B,MAAM,EAAED,CAAC,EAAE,EAAE;QACxCF,WAAW,IAAIH,GAAG,CAACzB,IAAI,CAAC8B,CAAC,CAAC,CAACE,MAAM;QACjCH,YAAY,IAAIJ,GAAG,CAACzB,IAAI,CAAC8B,CAAC,CAAC,CAAC5B,OAAO;QACnCL,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC8B,CAAC,CAAC,GAAGL,GAAG,CAACzB,IAAI,CAAC8B,CAAC,CAAC,CAACE,MAAM;QACnDnC,UAAU,CAACO,MAAM,CAAC0B,CAAC,CAAC,GAAGL,GAAG,CAACzB,IAAI,CAAC8B,CAAC,CAAC,CAACG,KAAK;QACxCpC,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACE,eAAe,CAAC6B,CAAC,CAAC,GAAGL,GAAG,CAACzB,IAAI,CAAC8B,CAAC,CAAC,CAACI,KAAK;QAC7DrC,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC4B,CAAC,CAAC,GAAGL,GAAG,CAACzB,IAAI,CAAC8B,CAAC,CAAC,CAAC5B,OAAO;QACvDL,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC2B,CAAC,CAAC,GAAGL,GAAG,CAACzB,IAAI,CAAC8B,CAAC,CAAC,CAAC3B,KAAK;MACrD;MACAG,cAAc,CAACsB,WAAW,CAAC;MAC7BpB,eAAe,CAACqB,YAAY,CAAC;MAC3B;MACAH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC9B,UAAU,CAAC;MACvCsC,sBAAsB,CAAC,CAAC;MAExB1B,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC,CACD2B,KAAK,CAAC,UAAUjE,KAAK,EAAE;MACtBuD,OAAO,CAACvD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd6E,SAAS,CAAC3B,aAAa,CAAC;EAC1B,CAAC,CAAC;EAEF,MAAM4C,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;EAAA,CACD;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC7C,gBAAgB,CAAC6C,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMC,aAAa,GAAIH,KAAK,IAAK;IAC/B3C,iBAAiB,CAAC2C,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAEDlG,SAAS,CAAC,MAAM;IACdmD,gBAAgB,CAAC,CAAC,IAAIb,IAAI,CAAC,CAAC,CAAC8D,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE7E,QAAQ,CAAC,CAAC,CAAC;IACxD8B,iBAAiB,CAACzC,MAAM,CAAC,IAAI0B,IAAI,CAAC,CAAC,CAAC8D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAENpG,SAAS,CAAC,MAAM;IACdmE,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAGhB,oBACEjD,OAAA;IAAKgG,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,eACpDnG,OAAA;MAAKoG,SAAS,EAAC,0BAA0B;MAAAD,QAAA,gBACvCnG,OAAA;QAAKoG,SAAS,EAAC,mBAAmB;QAAAD,QAAA,gBAChCnG,OAAA;UAAIoG,SAAS,EAAC,gBAAgB;UAAAD,QAAA,GAAC,aAAW,EAAChG,QAAQ,EAAC,cAAY;QAAA;UAAAkG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrExG,OAAA,CAACJ,IAAI;UAAC6G,EAAE,EAAC,QAAQ;UAACL,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eAeNxG,OAAA;QAASoG,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACzBnG,OAAA;UAASoG,SAAS,EAAC,cAAc;UAAAD,QAAA,gBAC/BnG,OAAA;YAAAmG,QAAA,GAAI,yCAAuC,EAACpD,cAAc;UAAA;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChExG,OAAA;YAAAmG,QAAA,GAAO,iBAEL,eAAAnG,OAAA;cAAQ6F,KAAK,EAAE9C,cAAe;cAAC2D,QAAQ,EAAEZ,aAAc;cAAC,cAAW,gBAAgB;cAAAK,QAAA,gBACjFnG,OAAA;gBAAQ6F,KAAK,EAAE,EAAG;gBAACc,QAAQ;gBAACC,MAAM;gBAAAT,QAAA,EAAC;cAEnC;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACRjG,MAAM,CAACQ,GAAG,CAAC,CAACwC,KAAK,EAAEsD,KAAK,kBACvB7G,OAAA;gBAAoB6F,KAAK,EAAEtC,KAAM;gBAAA4C,QAAA,EAAE5C;cAAK,GAA3BsD,KAAK;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA+B,CAClD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACRxG,OAAA;YAAAmG,QAAA,eACEnG,OAAA;cAAQ8G,EAAE,EAAC,QAAQ;cAAAX,QAAA,EAAC;YAAC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACVxG,OAAA;QAAK8G,EAAE,EAAC,iBAAiB;QAACV,SAAS,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtG,EAAA,CA5LQD,aAAa;AAAA8G,EAAA,GAAb9G,aAAa;AA8LtB,eAAeA,aAAa;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}