{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bnikh\\\\Desktop\\\\Ashish NBAD Project\\\\PersonalBudget-Frontend\\\\src\\\\DashboardPage\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('jwt');\n  const months = ['Select Month', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const handleModify = index => {\n    const rowData = {\n      title: dataSource.labels[index],\n      budget: dataSource.datasets[0].data[index],\n      color: dataSource.datasets[0].backgroundColor[index],\n      expense: dataSource.datasets[0].expense[index],\n      month: dataSource.datasets[0].month[index]\n    };\n    navigate('/modifycategory', {\n      state: {\n        rowData\n      }\n    });\n  };\n  function decodingJWT(token) {\n    try {\n      const base64payload = token.split('.')[1].replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      return {};\n    }\n  }\n  useEffect(() => {\n    const existingToken = localStorage.getItem('jwt');\n    if (existingToken) {\n      const decodedToken = decodingJWT(existingToken);\n      const issuedAt = decodedToken.iat;\n      const expiresIn = decodedToken.exp - issuedAt;\n      const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n        if (!userResponse || currentTimeInSeconds - issuedAt > expiresIn) {\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n  const [selectedMonth, setSelectedMonth] = useState('Select Month');\n  const [selectedMonth1, setSelectedMonth1] = useState('Select Month');\n  const [selectedMonth2, setSelectedMonth2] = useState('Select Month');\n  const [selectedMonth3, setSelectedMonth3] = useState('Select Month');\n  const [dataSource, setDataSource] = useState({\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      expense: [],\n      month: []\n    }],\n    labels: []\n  });\n  const [totalBudget, setTotalBudget] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const createDataTable = () => {\n    // Existing code for creating data table\n  };\n  const drawDonutChart = () => {\n    const ctx = document.getElementById('chart1').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredExpenses = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    const filteredLabels = dataSource.labels.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    const filteredColors = dataSource.datasets[0].backgroundColor.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data available for this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            label: 'Expenses',\n            data: filteredExpenses,\n            backgroundColor: filteredColors,\n            borderWidth: 1\n          }]\n        }\n      });\n    }\n  };\n  const drawBarChart2 = () => {\n    const ctx = document.getElementById('chart2').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredExpenses = [];\n    const filteredBudget = [];\n    const filteredLabels = [];\n    const filteredColors = [];\n    dataSource.labels.forEach((label, index) => {\n      if (dataSource.datasets[0].month[index] === selectedMonth2) {\n        filteredLabels.push(label);\n        filteredExpenses.push(dataSource.datasets[0].expense[index]);\n        filteredBudget.push(dataSource.datasets[0].data[index]);\n        filteredColors.push(dataSource.datasets[0].backgroundColor[index]);\n      }\n    });\n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data available for this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            label: 'Budget',\n            data: filteredBudget,\n            backgroundColor: filteredColors,\n            borderColor: filteredColors,\n            borderWidth: 1\n          }, {\n            label: 'Expenses',\n            data: filteredExpenses,\n            backgroundColor: filteredColors,\n            borderColor: filteredColors,\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  };\n  const drawTotalChart = () => {\n    // Implementation for drawTotalChart\n  };\n  const getBudget = () => {\n    axios.get(`http://localhost:3000/api/budget/q`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (res) {\n      let budgetTotal = 0;\n      let expenseTotal = 0;\n      for (var i = 0; i < res.data.length; i++) {\n        budgetTotal += res.data[i].budget;\n        expenseTotal += res.data[i].expense;\n        dataSource.datasets[0].data[i] = res.data[i].budget;\n        dataSource.labels[i] = res.data[i].title;\n        dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n        dataSource.datasets[0].expense[i] = res.data[i].expense;\n        dataSource.datasets[0].month[i] = res.data[i].month;\n      }\n      setTotalBudget(budgetTotal);\n      setTotalExpense(expenseTotal);\n      drawDonutChart();\n      createDataTable();\n      drawTotalChart();\n    }).catch(function (error) {\n      console.error('Error fetching budget data:', error);\n    });\n  };\n  useEffect(() => {\n    getBudget();\n  }, []);\n  useEffect(() => {\n    drawDonutChart();\n  }, [selectedMonth1, dataSource]);\n  useEffect(() => {\n    drawBarChart2();\n  }, [selectedMonth2, dataSource]);\n  useEffect(() => {\n    drawTotalChart();\n  }, [selectedMonth3, dataSource]);\n  const handleMonthChange = event => {\n    const newSelectedMonth = event.target.value;\n    setSelectedMonth(newSelectedMonth);\n    setSelectedMonth1(newSelectedMonth);\n    setSelectedMonth2(newSelectedMonth);\n    setSelectedMonth3(newSelectedMonth);\n  };\n  const handleChange1 = event => {\n    setSelectedMonth1(event.target.value);\n  };\n  const handleChange2 = event => {\n    setSelectedMonth2(event.target.value);\n  };\n  const handleChange3 = event => {\n    setSelectedMonth3(event.target.value);\n  };\n\n  // const handleModify = (index) => {\n  //   console.log('Modify button clicked for index:', index);\n  // };\n\n  const handleDelete = index => {\n    console.log('Delete button clicked for index:', index);\n  };\n  const handleAddCategory = () => {\n    navigate('/addcategory');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      padding: '30px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-corner-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dashboard-head\",\n          children: [\"WELCOME TO \", username, \"'s DASHBOARD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"logout-link\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"month-dropdown\",\n          children: \"Select a month:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"month-dropdown\",\n            value: selectedMonth,\n            onChange: handleMonthChange,\n            children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: month,\n              children: month\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-arrow\",\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"charts\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart chart1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Donut Chart for Expenses in \", selectedMonth1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select a month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedMonth1,\n              onChange: handleChange1,\n              \"aria-label\": \"Select a month\",\n              children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: month,\n                children: month\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"chart1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart chart2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bar Chart for Budget and Expenses in \", selectedMonth2]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select a month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedMonth2,\n              onChange: handleChange2,\n              \"aria-label\": \"Select a month\",\n              children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: month,\n                children: month\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"chart2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"table-container\",\n        className: \"data-table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-category \",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: handleAddCategory,\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Content of my budget and Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Budget\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Expense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dataSource.labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dataSource.datasets[0].data[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dataSource.datasets[0].expense[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dataSource.datasets[0].month[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dataSource.datasets[0].backgroundColor[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleModify(index),\n                  children: \"Modify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(index),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"jk8oTGiPMeHNnObkaFwU6hm5xnU=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","Chart","jsxDEV","_jsxDEV","DashboardPage","_s","navigate","username","localStorage","getItem","token","months","handleModify","index","rowData","title","dataSource","labels","budget","datasets","data","color","backgroundColor","expense","month","state","decodingJWT","base64payload","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","error","existingToken","decodedToken","issuedAt","iat","expiresIn","exp","currentTimeInSeconds","Math","floor","Date","now","warningTime","warningTimeout","setTimeout","userResponse","window","confirm","removeItem","location","reload","clearTimeout","selectedMonth","setSelectedMonth","selectedMonth1","setSelectedMonth1","selectedMonth2","setSelectedMonth2","selectedMonth3","setSelectedMonth3","setDataSource","totalBudget","setTotalBudget","totalExpense","setTotalExpense","createDataTable","drawDonutChart","ctx","document","getElementById","getContext","existingChart","getChart","destroy","filteredExpenses","filter","filteredLabels","_","filteredColors","length","clearRect","canvas","width","height","font","textAlign","fillText","type","label","borderWidth","drawBarChart2","filteredBudget","forEach","push","borderColor","options","scales","y","beginAtZero","drawTotalChart","getBudget","get","headers","Authorization","then","res","budgetTotal","expenseTotal","i","catch","console","handleMonthChange","event","newSelectedMonth","target","value","handleChange1","handleChange2","handleChange3","handleDelete","log","handleAddCategory","style","position","padding","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","htmlFor","id","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bnikh/Desktop/Ashish NBAD Project/PersonalBudget-Frontend/src/DashboardPage/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link,useNavigate} from 'react-router-dom';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\n\nfunction DashboardPage() {\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('jwt');\n  const months = [\n    'Select Month', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n  const handleModify = (index) => {\n    const rowData = {\n      title: dataSource.labels[index],\n      budget: dataSource.datasets[0].data[index],\n      color: dataSource.datasets[0].backgroundColor[index],\n      expense: dataSource.datasets[0].expense[index],\n      month: dataSource.datasets[0].month[index]\n    };\n    navigate('/modifycategory', { state: { rowData } });\n  };\n  function decodingJWT(token) {\n    try {\n      const base64payload = (token.split('.')[1]).replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      return {};\n    }\n  }\n\n  useEffect(() => {\n    const existingToken = localStorage.getItem('jwt');\n    if (existingToken) {\n      const decodedToken = decodingJWT(existingToken);\n      const issuedAt = decodedToken.iat; \n      const expiresIn = decodedToken.exp - issuedAt;\n      const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n\n        if (!userResponse || currentTimeInSeconds-issuedAt>expiresIn) {\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n\n  const [selectedMonth, setSelectedMonth] = useState('Select Month');\n  const [selectedMonth1, setSelectedMonth1] = useState('Select Month');\n  const [selectedMonth2, setSelectedMonth2] = useState('Select Month');\n  const [selectedMonth3, setSelectedMonth3] = useState('Select Month');\n  const [dataSource, setDataSource] = useState({\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [],\n        expense: [],\n        month: [],\n      },\n    ],\n    labels: [],\n  });\n\n  const [totalBudget, setTotalBudget] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const createDataTable = () => {\n    // Existing code for creating data table\n  };\n\n  const drawDonutChart = () => {\n    const ctx = document.getElementById('chart1').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n\n    const filteredExpenses = dataSource.datasets[0].expense.filter(\n      (expense, index) => dataSource.datasets[0].month[index] === selectedMonth1\n    );\n    const filteredLabels = dataSource.labels.filter(\n      (_, index) => dataSource.datasets[0].month[index] === selectedMonth1\n    );\n    const filteredColors = dataSource.datasets[0].backgroundColor.filter(\n      (_, index) => dataSource.datasets[0].month[index] === selectedMonth1\n    );\n\n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data available for this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: filteredLabels,\n          datasets: [\n            {\n              label: 'Expenses',\n              data: filteredExpenses,\n              backgroundColor:filteredColors,\n              borderWidth: 1,\n            },\n          ],\n        },\n      });\n    }\n  };\n\n  const drawBarChart2 = () => {\n    const ctx = document.getElementById('chart2').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n  \n    const filteredExpenses = [];\n    const filteredBudget = [];\n    const filteredLabels = [];\n    const filteredColors = [];\n   \n    dataSource.labels.forEach((label, index) => {\n      if (dataSource.datasets[0].month[index] === selectedMonth2) {\n        filteredLabels.push(label);\n        filteredExpenses.push(dataSource.datasets[0].expense[index]);\n        filteredBudget.push(dataSource.datasets[0].data[index]);\n        filteredColors.push(dataSource.datasets[0].backgroundColor[index]);\n      }\n    });\n  \n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data available for this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredLabels,\n          datasets: [\n            {\n              label: 'Budget',\n              data: filteredBudget,\n              backgroundColor: filteredColors,\n              borderColor: filteredColors,\n              borderWidth: 1\n            },\n            {\n              label: 'Expenses',\n              data: filteredExpenses,\n              backgroundColor: filteredColors,\n              borderColor: filteredColors,\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  };\n\n   const drawTotalChart = () => {\n    // Implementation for drawTotalChart\n  };\n\n  const getBudget = () => {\n    axios\n      .get(`http://localhost:3000/api/budget/q`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then(function (res) {\n        let budgetTotal = 0;\n        let expenseTotal = 0;\n        for (var i = 0; i < res.data.length; i++) {\n          budgetTotal += res.data[i].budget;\n          expenseTotal += res.data[i].expense;\n          dataSource.datasets[0].data[i] = res.data[i].budget;\n          dataSource.labels[i] = res.data[i].title;\n          dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n          dataSource.datasets[0].expense[i] = res.data[i].expense;\n          dataSource.datasets[0].month[i] = res.data[i].month;\n        }\n        setTotalBudget(budgetTotal);\n        setTotalExpense(expenseTotal);\n        drawDonutChart();\n        createDataTable();\n        drawTotalChart();\n      })\n      .catch(function (error) {\n        console.error('Error fetching budget data:', error);\n      });\n  };\n\n  useEffect(() => {\n    getBudget();\n  }, []);\n\n  useEffect(() => {\n    drawDonutChart();\n  }, [selectedMonth1, dataSource]);\n\n  useEffect(() => {\n    drawBarChart2();\n  }, [selectedMonth2, dataSource]);\n\n  useEffect(() => {\n    drawTotalChart();\n  }, [selectedMonth3, dataSource]);\n\n  const handleMonthChange = (event) => {\n    const newSelectedMonth = event.target.value;\n    setSelectedMonth(newSelectedMonth);\n    setSelectedMonth1(newSelectedMonth);\n    setSelectedMonth2(newSelectedMonth);\n    setSelectedMonth3(newSelectedMonth);\n  };\n\n  const handleChange1 = (event) => {\n    setSelectedMonth1(event.target.value);\n  };\n\n  const handleChange2 = (event) => {\n    setSelectedMonth2(event.target.value);\n  };\n\n  const handleChange3 = (event) => {\n    setSelectedMonth3(event.target.value);\n  };\n\n  // const handleModify = (index) => {\n  //   console.log('Modify button clicked for index:', index);\n  // };\n\n  const handleDelete = (index) => {\n    console.log('Delete button clicked for index:', index);\n  };\n\n  const handleAddCategory = () => {\n    navigate('/addcategory');\n  };\n\n  return (\n    <div style={{ position: 'relative', padding: '30px' }}>\n      <div className=\"dashboard-corner-section\">\n        <div className=\"heading-container\">\n          <h1 className=\"dashboard-head\">WELCOME TO {username}'s DASHBOARD</h1>\n          <Link to=\"/login\" className=\"logout-link\">Logout</Link>\n        </div>\n        <div className='filter-dropdown'>\n          <label htmlFor=\"month-dropdown\">Select a month:</label><br/>\n          <div className=\"custom-dropdown\">\n            <select id=\"month-dropdown\" value={selectedMonth} onChange={handleMonthChange}>\n              {months.map((month, index) => (\n                <option key={index} value={month}>{month}</option>\n              ))}\n            </select>\n            <div className=\"dropdown-arrow\">&#9660;</div>\n          </div>\n        </div>\n        <section className=\"charts\">\n          <article className=\"chart chart1\">\n            <h3>Donut Chart for Expenses in {selectedMonth1}</h3>\n            <label>\n              Select a month:\n              <select value={selectedMonth1} onChange={handleChange1} aria-label=\"Select a month\">\n                {months.map((month, index) => (\n                  <option key={index} value={month}>{month}</option>\n                ))}\n              </select>\n            </label>\n            <div>\n              <canvas id=\"chart1\"></canvas>\n            </div>\n          </article>\n          <article className=\"chart chart2\">\n            <h3>Bar Chart for Budget and Expenses in {selectedMonth2}</h3>\n            <label>\n              Select a month:\n              <select value={selectedMonth2} onChange={handleChange2} aria-label=\"Select a month\">\n                {months.map((month, index) => (\n                  <option key={index} value={month}>{month}</option>\n                ))}\n              </select>\n            </label>\n            <div>\n              <canvas id=\"chart2\"></canvas>\n            </div>\n          </article>\n        </section>\n       \n        <div id=\"table-container\" className=\"data-table-container\">\n        <div className=\"new-category \">\n          <button className=\"btn\" onClick={handleAddCategory}>Add Category</button>\n        </div>\n        <h3>Content of my budget and Expenses</h3>\n          <table className=\"data-table\">\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Budget</th>\n                <th>Expense</th>\n                <th>Month</th>\n                <th>Color</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataSource.labels.map((label, index) => (\n                <tr key={index}>\n                  <td>{label}</td>\n                  <td>{dataSource.datasets[0].data[index]}</td>\n                  <td>{dataSource.datasets[0].expense[index]}</td>\n                  <td>{dataSource.datasets[0].month[index]}</td>\n                  <td>{dataSource.datasets[0].backgroundColor[index]}</td>\n                  <td>\n                    <button onClick={() => handleModify(index)}>Modify</button>&nbsp;\n                    <button onClick={() => handleDelete(index)}>Delete</button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}