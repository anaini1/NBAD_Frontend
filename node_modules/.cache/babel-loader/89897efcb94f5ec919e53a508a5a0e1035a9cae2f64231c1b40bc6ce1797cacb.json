{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bnikh\\\\Desktop\\\\Ashish NBAD Project\\\\PersonalBudget-Frontend\\\\src\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport Header from './Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const calculateDifference = dataSource => {\n  let totalBudget = 0;\n  let totalExpenses = 0;\n  if (dataSource.datasets[0].data.length > 0) {\n    for (var i = 0; i < dataSource.datasets[0].data.length; i++) {\n      totalBudget += dataSource.datasets[0].data[i];\n      totalExpenses += dataSource.datasets[0].expense[i];\n    }\n    const difference = totalBudget - totalExpenses;\n    return difference;\n  }\n  return null;\n};\nfunction DashboardPage() {\n  _s();\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('jwt');\n  const months = ['Select Month', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const handleModify = index => {\n    const rowData = {\n      title: dataSource.labels[index],\n      budget: dataSource.datasets[0].data[index],\n      color: dataSource.datasets[0].backgroundColor[index],\n      expense: dataSource.datasets[0].expense[index],\n      month: dataSource.datasets[0].month[index]\n    };\n    navigate('/modifycategory', {\n      state: {\n        rowData\n      }\n    });\n  };\n  const handleDelete = index => {\n    const rowData = {\n      title: dataSource.labels[index],\n      budget: dataSource.datasets[0].data[index],\n      color: dataSource.datasets[0].backgroundColor[index],\n      expense: dataSource.datasets[0].expense[index],\n      month: dataSource.datasets[0].month[index]\n    };\n    navigate('/deletecategory', {\n      state: {\n        rowData\n      }\n    });\n  };\n  function decodingJWT(token) {\n    try {\n      const base64payload = token.split('.')[1].replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      return {};\n    }\n  }\n  useEffect(() => {\n    const existingToken = localStorage.getItem('jwt');\n    if (existingToken) {\n      const decodedToken = decodingJWT(existingToken);\n      const issuedAt = decodedToken.iat;\n      const expiresIn = decodedToken.exp - issuedAt;\n      const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n        if (!userResponse || currentTimeInSeconds - issuedAt > expiresIn) {\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n  const [selectedMonth, setSelectedMonth] = useState('Select Month');\n  const [selectedMonth1, setSelectedMonth1] = useState('Select Month');\n  const [selectedMonth2, setSelectedMonth2] = useState('Select Month');\n  const [dataSource, setDataSource] = useState({\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      expense: [],\n      month: []\n    }],\n    labels: []\n  });\n  const [totalBudget, setTotalBudget] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const drawDonutChart = () => {\n    const ctx = document.getElementById('chart1').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredExpenses = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    const filteredLabels = dataSource.labels.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    const filteredColors = dataSource.datasets[0].backgroundColor.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            label: 'Expenses',\n            data: filteredExpenses,\n            backgroundColor: filteredColors,\n            borderWidth: 1\n          }]\n        }\n      });\n    }\n  };\n  const drawBarChart2 = () => {\n    const ctx = document.getElementById('chart2').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredExpenses = [];\n    const filteredBudget = [];\n    const filteredLabels = [];\n    const filteredColors = [];\n    dataSource.labels.forEach((label, index) => {\n      if (dataSource.datasets[0].month[index] === selectedMonth2) {\n        filteredLabels.push(label);\n        filteredExpenses.push(dataSource.datasets[0].expense[index]);\n        filteredBudget.push(dataSource.datasets[0].data[index]);\n        filteredColors.push(dataSource.datasets[0].backgroundColor[index]);\n      }\n    });\n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data ', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            label: 'Budget',\n            data: filteredBudget,\n            backgroundColor: filteredColors,\n            borderColor: filteredColors,\n            borderWidth: 1\n          }, {\n            label: 'Expenses',\n            data: filteredExpenses,\n            backgroundColor: filteredColors,\n            borderColor: filteredColors,\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  };\n  const drawTotalChart = () => {\n    const ctx = document.getElementById('chart3').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredLabels = dataSource.labels;\n    const filteredData = dataSource.datasets[0].data;\n    console.log('dataSource.datasets[0].data::', dataSource.datasets[0].data);\n    // Define an array of colors for the chart\n    const colors = ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9900', '#66CCCC', '#99CC99', '#FF6666', '#666699', '#CCCC99', '#FF99CC', '#3399FF'];\n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'polarArea',\n        data: {\n          labels: dataSource.labels,\n          datasets: [{\n            label: 'Total Budget and Expenses',\n            data: dataSource.datasets[0].data,\n            backgroundColor: colors,\n            // Use the defined colors array\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    }\n  };\n  const getBudget = () => {\n    axios.get(`http://localhost:3000/budget/${username} `, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (res) {\n      let budgetTotal = 0;\n      let expenseTotal = 0;\n      for (var i = 0; i < res.data.length; i++) {\n        budgetTotal += res.data[i].budget;\n        expenseTotal += res.data[i].expense;\n        dataSource.datasets[0].data[i] = res.data[i].budget;\n        dataSource.labels[i] = res.data[i].title;\n        dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n        dataSource.datasets[0].expense[i] = res.data[i].expense;\n        dataSource.datasets[0].month[i] = res.data[i].month;\n      }\n      setTotalBudget(budgetTotal);\n      setTotalExpense(expenseTotal);\n      drawDonutChart();\n      drawTotalChart();\n    }).catch(function (error) {\n      console.error('Error fetching budget data:', error);\n    });\n  };\n  useEffect(() => {\n    getBudget();\n  }, []);\n  useEffect(() => {\n    drawDonutChart();\n  }, [selectedMonth1, dataSource]);\n  useEffect(() => {\n    drawBarChart2();\n  }, [selectedMonth2, dataSource]);\n  useEffect(() => {\n    drawTotalChart();\n  }, [dataSource]);\n  const handleMonthChange = event => {\n    const newSelectedMonth = event.target.value;\n    setSelectedMonth(newSelectedMonth);\n    setSelectedMonth1(newSelectedMonth);\n    setSelectedMonth2(newSelectedMonth);\n  };\n  const handleChange1 = event => {\n    setSelectedMonth1(event.target.value);\n  };\n  const handleChange2 = event => {\n    setSelectedMonth2(event.target.value);\n  };\n  const handleAddCategory = () => {\n    navigate('/addcategory');\n  };\n  useEffect(() => {\n    drawTotalChart();\n  }, [dataSource]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        padding: '30px',\n        paddingTop: '100px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-corner-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"dashboard-head\",\n            children: [username, \"'s Budgeting Dashboard\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"logout-link\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"month-dropdown\",\n            children: \"Select a month:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 66\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"month-dropdown\",\n              value: selectedMonth,\n              onChange: handleMonthChange,\n              children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: month,\n                children: month\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-arrow\",\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"charts\",\n          children: [/*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"chart chart1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Donut Chart for Expenses in \", selectedMonth1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Select a month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedMonth1,\n                onChange: handleChange1,\n                \"aria-label\": \"Select a month\",\n                children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: month,\n                  children: month\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                id: \"chart1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"chart chart2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Bar Chart for Budget and Expenses in \", selectedMonth2]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Select a month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedMonth2,\n                onChange: handleChange2,\n                \"aria-label\": \"Select a month\",\n                children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: month,\n                  children: month\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                id: \"chart2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"chart chart3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Polar chart for all Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                id: \"chart3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"table-container\",\n          className: \"data-table-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-category \",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: handleAddCategory,\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Content of my budget and Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"data-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Budget\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Expense\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataSource.labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dataSource.datasets[0].data[index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dataSource.datasets[0].expense[index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dataSource.datasets[0].month[index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dataSource.datasets[0].backgroundColor[index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleModify(index),\n                    children: \"Modify\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 21\n                  }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDelete(index),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this), \"\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 19\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"nShFK+Y2ZDTLrdIuuJGSJOBt9ZY=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","Chart","Header","jsxDEV","_jsxDEV","calculateDifference","dataSource","totalBudget","totalExpenses","datasets","data","length","i","expense","difference","DashboardPage","_s","navigate","username","localStorage","getItem","token","months","handleModify","index","rowData","title","labels","budget","color","backgroundColor","month","state","handleDelete","decodingJWT","base64payload","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","error","existingToken","decodedToken","issuedAt","iat","expiresIn","exp","currentTimeInSeconds","Math","floor","Date","now","warningTime","warningTimeout","setTimeout","userResponse","window","confirm","removeItem","location","reload","clearTimeout","selectedMonth","setSelectedMonth","selectedMonth1","setSelectedMonth1","selectedMonth2","setSelectedMonth2","setDataSource","setTotalBudget","totalExpense","setTotalExpense","drawDonutChart","ctx","document","getElementById","getContext","existingChart","getChart","destroy","filteredExpenses","filter","filteredLabels","_","filteredColors","clearRect","canvas","width","height","font","textAlign","fillText","type","label","borderWidth","drawBarChart2","filteredBudget","forEach","push","borderColor","options","scales","y","beginAtZero","drawTotalChart","filteredData","console","log","colors","responsive","maintainAspectRatio","getBudget","get","headers","Authorization","then","res","budgetTotal","expenseTotal","catch","handleMonthChange","event","newSelectedMonth","target","value","handleChange1","handleChange2","handleAddCategory","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","padding","paddingTop","className","to","htmlFor","id","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bnikh/Desktop/Ashish NBAD Project/PersonalBudget-Frontend/src/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link,useNavigate} from 'react-router-dom';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport Header from './Header/Header';\nexport const calculateDifference= (dataSource) => {\n\n  let totalBudget=0; \n  let totalExpenses=0;\n  if(dataSource.datasets[0].data.length>0){\n  for(var i=0;i<dataSource.datasets[0].data.length;i++)\n  {\n    totalBudget+=dataSource.datasets[0].data[i];\n    totalExpenses+= dataSource.datasets[0].expense[i];\n  }\n  const difference = totalBudget - totalExpenses;\n return difference;\n}\nreturn null;\n};\nfunction DashboardPage() {\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('jwt');\n  const months = [\n    'Select Month', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n  const handleModify = (index) => {\n    const rowData = {\n      title: dataSource.labels[index],\n      budget: dataSource.datasets[0].data[index],\n      color: dataSource.datasets[0].backgroundColor[index],\n      expense: dataSource.datasets[0].expense[index],\n      month: dataSource.datasets[0].month[index]\n    };\n    navigate('/modifycategory', { state: { rowData } });\n  };\n  const handleDelete = (index) => {\n    const rowData = {\n      title: dataSource.labels[index],\n      budget: dataSource.datasets[0].data[index],\n      color: dataSource.datasets[0].backgroundColor[index],\n      expense: dataSource.datasets[0].expense[index],\n      month: dataSource.datasets[0].month[index]\n    };\n    navigate('/deletecategory', { state: { rowData } });\n  };\n  function decodingJWT(token) {\n    try {\n      const base64payload = (token.split('.')[1]).replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      return {};\n    }\n  }\n\n  useEffect(() => {\n    const existingToken = localStorage.getItem('jwt');\n    if (existingToken) {\n      const decodedToken = decodingJWT(existingToken);\n      const issuedAt = decodedToken.iat; \n      const expiresIn = decodedToken.exp - issuedAt;\n      const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n\n        if (!userResponse || currentTimeInSeconds-issuedAt>expiresIn) {\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n\n  const [selectedMonth, setSelectedMonth] = useState('Select Month');\n  const [selectedMonth1, setSelectedMonth1] = useState('Select Month');\n  const [selectedMonth2, setSelectedMonth2] = useState('Select Month');\n  const [dataSource, setDataSource] = useState({\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [],\n        expense: [],\n        month: [],\n      },\n    ],\n    labels: [],\n  });\n\n  const [totalBudget, setTotalBudget] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const drawDonutChart = () => {\n    const ctx = document.getElementById('chart1').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n\n    const filteredExpenses = dataSource.datasets[0].expense.filter(\n      (expense, index) => dataSource.datasets[0].month[index] === selectedMonth1\n    );\n    const filteredLabels = dataSource.labels.filter(\n      (_, index) => dataSource.datasets[0].month[index] === selectedMonth1\n    );\n    const filteredColors = dataSource.datasets[0].backgroundColor.filter(\n      (_, index) => dataSource.datasets[0].month[index] === selectedMonth1\n    );\n\n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: filteredLabels,\n          datasets: [\n            {\n              label: 'Expenses',\n              data: filteredExpenses,\n              backgroundColor:filteredColors,\n              borderWidth: 1,\n            },\n          ],\n        },\n      });\n    }\n  };\n\n  const drawBarChart2 = () => {\n    const ctx = document.getElementById('chart2').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n  \n    const filteredExpenses = [];\n    const filteredBudget = [];\n    const filteredLabels = [];\n    const filteredColors = [];\n   \n    dataSource.labels.forEach((label, index) => {\n      if (dataSource.datasets[0].month[index] === selectedMonth2) {\n        filteredLabels.push(label);\n        filteredExpenses.push(dataSource.datasets[0].expense[index]);\n        filteredBudget.push(dataSource.datasets[0].data[index]);\n        filteredColors.push(dataSource.datasets[0].backgroundColor[index]);\n      }\n    });\n  \n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data ', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredLabels,\n          datasets: [\n            {\n              label: 'Budget',\n              data: filteredBudget,\n              backgroundColor: filteredColors,\n              borderColor: filteredColors,\n              borderWidth: 1\n            },\n            {\n              label: 'Expenses',\n              data: filteredExpenses,\n              backgroundColor: filteredColors,\n              borderColor: filteredColors,\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  };\n\n  const drawTotalChart = () => {\n    const ctx = document.getElementById('chart3').getContext('2d');\n    let existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n  \n    const filteredLabels = dataSource.labels;\n    const filteredData = dataSource.datasets[0].data;\n  console.log('dataSource.datasets[0].data::',dataSource.datasets[0].data)\n    // Define an array of colors for the chart\n    const colors = ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9900', '#66CCCC', '#99CC99', '#FF6666', '#666699', '#CCCC99', '#FF99CC', '#3399FF'];\n  \n    if (filteredLabels.length === 0) {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No data', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      existingChart = new Chart(ctx, {\n        type: 'polarArea',\n        data: {\n          labels: dataSource.labels,\n          datasets: [{\n            label: 'Total Budget and Expenses',\n            data: dataSource.datasets[0].data,\n            backgroundColor: colors, // Use the defined colors array\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n        }\n      });\n    }\n  };\n  const getBudget = () => {\n    axios\n      .get(`http://localhost:3000/budget/${username} `, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then(function (res) {\n        let budgetTotal = 0;\n        let expenseTotal = 0;\n        for (var i = 0; i < res.data.length; i++) {\n          budgetTotal += res.data[i].budget;\n          expenseTotal += res.data[i].expense;\n          dataSource.datasets[0].data[i] = res.data[i].budget;\n          dataSource.labels[i] = res.data[i].title;\n          dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n          dataSource.datasets[0].expense[i] = res.data[i].expense;\n          dataSource.datasets[0].month[i] = res.data[i].month;\n        }\n        setTotalBudget(budgetTotal);\n        setTotalExpense(expenseTotal);\n        drawDonutChart();\n        drawTotalChart();\n      })\n      .catch(function (error) {\n        console.error('Error fetching budget data:', error);\n      });\n  };\n\n  useEffect(() => {\n    getBudget();\n  }, []);\n\n  useEffect(() => {\n    drawDonutChart();\n  }, [selectedMonth1, dataSource]);\n\n  useEffect(() => {\n    drawBarChart2();\n  }, [selectedMonth2, dataSource]);\n\n  useEffect(() => {\n    drawTotalChart();\n  }, [dataSource]);\n\n  const handleMonthChange = (event) => {\n    const newSelectedMonth = event.target.value;\n    setSelectedMonth(newSelectedMonth);\n    setSelectedMonth1(newSelectedMonth);\n    setSelectedMonth2(newSelectedMonth);\n  };\n\n  const handleChange1 = (event) => {\n    setSelectedMonth1(event.target.value);\n  };\n\n  const handleChange2 = (event) => {\n    setSelectedMonth2(event.target.value);\n  };\n\n \n  const handleAddCategory = () => {\n    navigate('/addcategory');\n  };\n\n  useEffect(() => {\n    drawTotalChart();\n  }, [dataSource]);\n\n  \n  return (\n    <div><Header></Header>\n    <div style={{ position: 'relative', padding: '30px',paddingTop:'100px' }}>\n      <div className=\"dashboard-corner-section\">\n        <div className=\"heading-container\">\n          <h1 className=\"dashboard-head\">{username}'s Budgeting Dashboard</h1>\n          <Link to=\"/login\" className=\"logout-link\">Logout</Link>\n        </div>\n        <div className='filter-dropdown'>\n          <label htmlFor=\"month-dropdown\">Select a month:</label><br/>\n          <div className=\"custom-dropdown\">\n            <select id=\"month-dropdown\" value={selectedMonth} onChange={handleMonthChange}>\n              {months.map((month, index) => (\n                <option key={index} value={month}>{month}</option>\n              ))}\n            </select>\n            <div className=\"dropdown-arrow\">&#9660;</div>\n          </div>\n        </div>\n        <section className=\"charts\">\n          <article className=\"chart chart1\">\n            <h3>Donut Chart for Expenses in {selectedMonth1}</h3>\n            <label>\n              Select a month:\n              <select value={selectedMonth1} onChange={handleChange1} aria-label=\"Select a month\">\n                {months.map((month, index) => (\n                  <option key={index} value={month}>{month}</option>\n                ))}\n              </select>\n            </label>\n            <div>\n              <canvas id=\"chart1\"></canvas>\n            </div>\n          </article>\n          <article className=\"chart chart2\">\n            <h3>Bar Chart for Budget and Expenses in {selectedMonth2}</h3>\n            <label>\n              Select a month:\n              <select value={selectedMonth2} onChange={handleChange2} aria-label=\"Select a month\">\n                {months.map((month, index) => (\n                  <option key={index} value={month}>{month}</option>\n                ))}\n              </select>\n            </label>\n            <div>\n              <canvas id=\"chart2\"></canvas>\n            </div>\n          </article>\n          <article className=\"chart chart3\">\n  <h3>Polar chart for all Budget</h3>\n  <div>\n    <canvas id=\"chart3\"></canvas>\n  </div>\n</article>\n        </section>\n        <div id=\"table-container\" className=\"data-table-container\">\n        <div className=\"new-category \">\n          <button className=\"btn\" onClick={handleAddCategory}>Add Category</button>\n        \n          {/* <button className=\"btn\" onClick={handleDelete}>Delete Category</button> */}\n        </div>\n        <h3>Content of my budget and Expenses</h3>\n          <table className=\"data-table\">\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Budget</th>\n                <th>Expense</th>\n                <th>Month</th>\n                <th>Color</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dataSource.labels.map((label, index) => (\n                <tr key={index}>\n                  <td>{label}</td>\n                  <td>{dataSource.datasets[0].data[index]}</td>\n                  <td>{dataSource.datasets[0].expense[index]}</td>\n                  <td>{dataSource.datasets[0].month[index]}</td>\n                  <td>{dataSource.datasets[0].backgroundColor[index]}</td>\n                  <td>\n                    <button onClick={() => handleModify(index)}>Modify</button>&nbsp;\n                    <button onClick={() => handleDelete(index)}>Delete</button>&nbsp;\n                    </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default DashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}